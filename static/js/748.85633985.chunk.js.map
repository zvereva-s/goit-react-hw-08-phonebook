{"version":3,"file":"static/js/748.85633985.chunk.js","mappings":"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","sources":["redux/contacts/contacts-selectors.js","webpack://goit-react-hw-08-phonebook/./src/shared/components/Filter/filter.module.css?b135","shared/components/Filter/Filter.jsx","webpack://goit-react-hw-08-phonebook/./src/modules/Contacts/ContactsList/contactsList.module.css?786b","modules/Contacts/ContactsList/ContactsList.jsx","shared/components/ContactForm/initialState.js","shared/components/ContactForm/fields.js","shared/components/ContactForm/ContactForm.jsx","webpack://goit-react-hw-08-phonebook/./src/modules/Contacts/contacts.module.css?23f1","modules/Contacts/Contacts.jsx","pages/ContactsPage/ContactsPage.jsx","webpack://goit-react-hw-08-phonebook/./src/shared/components/TextField/textField.module.css?9fa7","shared/components/TextField/TextField.jsx","shared/hooks/useForm.js"],"sourcesContent":["export const getContacts = ({ contacts }) => contacts;","// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"filter_wrapper__Gb4yQ\",\"label\":\"filter_label__SNwht\",\"input\":\"filter_input__wmOeC\"};","import PropTypes from 'prop-types';\nimport styles from './filter.module.css';\n\nfunction Filter({title, filter}) {\n        return (\n            <div className={styles.wrapper}>\n                <label className={styles.label}>{title}\n                    <input className={styles.input} type=\"text\" onChange={(e)=>filter(e)} required />\n                </label>\n            </div>\n        )\n    }\n\nFilter.defaultProps = {\n    filter: ()=>{},\n}    \n\n\nFilter.propTypes = {\n    title:PropTypes.string,\n    filter: PropTypes.func.isRequired,\n}\n\nexport default Filter;","// extracted by mini-css-extract-plugin\nexport default {\"item\":\"contactsList_item__NsQoM\",\"number\":\"contactsList_number__WSEap\"};","import React from 'react';\nimport { memo } from 'react';\nimport PropTypes from 'prop-types';\n\nimport Button from 'shared/components/Button';\nimport styles from './contactsList.module.css';\n\nfunction ContactList({ items, onClick }) {\n  const elements = items.map(({ id, name, number }) => (\n    <li key={id} className={styles.item}>\n          {name}: <span className={styles.number}>{number}</span>\n    <Button text='Delete' type='button' onClick={() => onClick(id) } />\n    </li>\n  ));\n  return <ul>{elements}</ul>;\n}\n\nContactList.defaultProps = {\n  contacts: [],\n  onClick: () => {},\n};\nContactList.propTypes = {\n  onClick: PropTypes.func.isRequired,\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n    })\n  ),\n};\n\nexport default memo(ContactList);","export const initialState = {\n    name: '',\n    number: '',\n}","export const fields = {\n    name: {\n        label: \"Name\",\n        name: \"name\",\n        placeholder: \"Type contact full name\",\n        required: true,\n        type: \"text\",\n        pattern: \"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\",\n        title: \"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\",\n    },\n    phone: {\n        label: \"Phone\",\n        name: \"number\",\n        placeholder: \"Type contact phone\",\n        required: true,\n        type: \"tel\",\n        // eslint-disable-next-line no-useless-escape\n        // pattern: \"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\",\n        title: \"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\",\n    }\n}","import useForm from \"shared/hooks/useForm\";\nimport PropTypes from 'prop-types';\n\nimport { initialState } from \"./initialState\";\nimport { fields } from \"./fields\";\n\nimport TextFields from \"../TextField\";\nimport Button from \"../Button\";\n\nfunction ContactForm({onSubmit}) {\n    const { state, handleChange, handleSubmit } = useForm({onSubmit, initialState});\n\n    const { name, number } = state;\n\n    return (\n        <form onSubmit={handleSubmit}>\n            <TextFields value={name} handleChange={handleChange} {...fields.name} />\n            <TextFields value={number} handleChange={handleChange} {...fields.phone} />\n            <Button text='Add contact' type=\"submit\" />\n        </form>\n    )\n};\nexport default ContactForm;\n\nContactForm.defaultProps = {\n    onSubmit: ()=>{},\n}\nContactForm.propTypes = {\n    onSubmit: PropTypes.func.isRequired,\n}","// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"contacts_wrapper__wj1Ka\",\"title\":\"contacts_title__e2oUw\",\"contactsList\":\"contacts_contactsList__uZUSZ\"};","import { useState, useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { getContacts} from 'redux/contacts/contacts-selectors';\nimport {fetchContacts,addContact, removeContact } from 'redux/contacts/contacts-operations';\n\nimport Filter from 'shared/components/Filter';\nimport ContactsList from './ContactsList';\nimport ContactForm from 'shared/components/ContactForm';\nimport Loader from '../../shared/components/Loader';\n\nimport styles from './contacts.module.css';\n\nfunction Contacts() {\n  const [filter, setFilter] = useState('');\n  const contacts = useSelector(getContacts);\n  const {items, loading, error } = contacts;\n\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchContacts())\n  }, [dispatch])\n\n\n    const onAddContact = (data)=> {\n        dispatch(addContact(data));\n    }\n  \n    const onRemoveContact = (id) => {\n        dispatch(removeContact(id));\n    }\n  const onFilter = (e)=>{\n      const { value } = e.target;\n      setFilter(value);\n    }\n    const getFilteredItems = () => {\n    if (!filter) {\n      return items;\n    }\n    return items.filter(el => el.name.toLowerCase().includes(filter.toLowerCase()));\n    }\n\n    const filteredItems = getFilteredItems();\n\n  return (\n    <div className={styles.wrapper}>\n      <div>\n        <h2 className={styles.title}>Phonebook</h2>\n        <ContactForm onSubmit={onAddContact} />\n      </div>\n      <div className={styles.contactsList}>\n        <h2 className={styles.title}>Contacts</h2>\n        <Filter filter={onFilter} />\n        {loading && <Loader />}\n        {error && <p>{error.message}</p>}\n        <ContactsList items={filteredItems} onClick={onRemoveContact} />\n      </div>\n    </div>\n  );\n}\nexport default Contacts;\n","import Contacts from \"modules/Contacts\";\n\nfunction ContactsPage() {\n    return (\n        <main>\n            <div className='container'>\n                <section className='section'>\n                    <h1 className='title'>Contacts Page</h1>\n                    <Contacts />\n                </section>\n            </div>\n        </main>\n    )\n };\nexport default ContactsPage;","// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"textField_wrapper__50VcK\",\"label\":\"textField_label__sEkJy\",\"input\":\"textField_input__0wJ6p\"};","import { useMemo } from \"react\";\nimport PropTypes from 'prop-types';\nimport { nanoid } from \"@reduxjs/toolkit\";\nimport styles from './textField.module.css';\n\n\nfunction TextField({label, name, value, handleChange, placeholder, required, type, pattern, title}) {\n\n    const id = useMemo(() => nanoid(), []);\n\n    return (\n        <div className={styles.wrapper}>\n            {label && <label className={styles.label} htmlFor={id}>{label}</label>}\n            <input className={styles.input} id={id} name={name} value={value} onChange={handleChange} placeholder={placeholder} type={type} required={required} pattern={pattern} title={title} />\n        </div>\n    )\n };\n\nexport default TextField;\n\nTextField.defaultProps = {\n    required: false,\n    type: 'text',\n    handleChange: ()=>{},\n}\nTextField.propTypes = {\n    label: PropTypes.string,\n    name: PropTypes.string.isRequired,\n    value: PropTypes.string.isRequired,\n    handleChange: PropTypes.func.isRequired,\n    placeholder: PropTypes.string,\n    required: PropTypes.bool,\n    type: PropTypes.string,\n    pattern: PropTypes.string,\n    title: PropTypes.string,\n}","import { useState } from \"react\";\nimport PropTypes from 'prop-types';\n    \nconst useForm = ({onSubmit, initialState}) => {\n    const [state, setState] = useState({...initialState});\n\n    const handleChange = ({target}) => {\n        const { name, value, type, checked } = target;\n        const newValue = type === \"checkbox\" ? checked : value;\n        setState(prevState => ({\n            ...prevState,\n            [name]: newValue\n        }))\n    }\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        onSubmit({...state});\n        reset();\n    };\n    const reset = () => {\n    setState({\n        ...initialState\n      })\n  }\n\n    return {state, setState, handleChange, handleSubmit, reset};\n}\n\nexport default useForm;\n\n\nuseForm.defaultProps = {\n    onSubmit: () => { },\n    initialState: {},\n}\nuseForm.propTypes = {\n    onSubmit: PropTypes.func.isRequired,\n    initialState: PropTypes.object.isRequired,\n}"],"names":["getContacts","contacts","Filter","title","filter","className","styles","type","onChange","e","required","defaultProps","ContactList","items","onClick","elements","map","id","name","number","Button","text","memo","initialState","fields","label","placeholder","pattern","ContactForm","onSubmit","useForm","state","handleChange","handleSubmit","TextField","value","useState","setFilter","useSelector","loading","error","dispatch","useDispatch","useEffect","fetchContacts","filteredItems","el","toLowerCase","includes","data","addContact","target","Loader","message","ContactsList","removeContact","useMemo","nanoid","htmlFor","setState","reset","checked","newValue","prevState","preventDefault","propTypes","PropTypes"],"sourceRoot":""}