{"version":3,"file":"static/js/610.60f1b8a6.chunk.js","mappings":"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","sources":["modules/Login/LoginForm/fields.js","modules/Login/LoginForm/initialState.js","modules/Login/LoginForm/LoginForm.jsx","modules/Login/Login.jsx","pages/LoginPage/LoginPage.jsx","webpack://goit-react-hw-08-phonebook/./src/shared/components/TextField/textField.module.css?9fa7","shared/components/TextField/TextField.jsx","shared/hooks/useAuthState.js","shared/hooks/useForm.js"],"sourcesContent":["export const fields = {\n    email: {\n        label: \"Email\",\n        name: \"email\",\n        placeholder: \"Type your email\",\n        required: true,\n        type: \"email\",\n    },\n    password: {\n        label: 'Password',\n        name: 'password',\n        placeholder: \"Type your password\",\n        required: true,\n        type: \"password\",\n    }\n}","export const initialState = {\n    email: '',\n    password: '',\n}","import useForm from \"shared/hooks/useForm\";\n\nimport TextFields from \"shared/components/TextField\";\nimport Button from \"shared/components/Button\";\n\nimport { fields } from \"./fields\";\nimport { initialState } from \"./initialState\";\n\nfunction LoginForm({ onSubmit }) {\n    const { state, handleChange, handleSubmit } = useForm({onSubmit, initialState});\n\n    const { email, password } = state;\n\n    return (\n        <form onSubmit={handleSubmit}>\n            <TextFields value={email} handleChange={handleChange} {...fields.email} />\n            <TextFields value={password} handleChange={handleChange} {...fields.password} />\n            <Button text='Login' type='submit' />\n        </form>\n    )\n\n };\n\nexport default LoginForm;","import { useDispatch } from 'react-redux';\n\nimport useAuthState from 'shared/hooks/useAuthState';\nimport { loginRequest } from 'redux/auth/auth-operations';\n\nimport LoginForm from './LoginForm';\nimport Loader from 'shared/components/Loader';\n\nfunction Login() {\n  const dispatch = useDispatch();\n  const { loading} = useAuthState();\n\n\n  function onLogin(data) {\n    dispatch(loginRequest(data));\n  }\n\n  return (\n    <>\n      {loading && <Loader />}\n      <LoginForm onSubmit={onLogin} />\n    </>\n  );\n}\n\nexport default Login;\n","import Login from 'modules/Login';\n\nfunction LoginPage() {\n    return (\n        <main>\n            <div className='container'>\n                <section className='section'>\n                    <h1 className='title'>Login Page</h1>\n                    <Login />\n                </section>\n            </div>\n        </main>\n    )\n };\nexport default LoginPage;","// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"textField_wrapper__50VcK\",\"label\":\"textField_label__sEkJy\",\"input\":\"textField_input__0wJ6p\"};","import { useMemo } from \"react\";\nimport PropTypes from 'prop-types';\nimport { nanoid } from \"@reduxjs/toolkit\";\nimport styles from './textField.module.css';\n\n\nfunction TextField({label, name, value, handleChange, placeholder, required, type, pattern, title}) {\n\n    const id = useMemo(() => nanoid(), []);\n\n    return (\n        <div className={styles.wrapper}>\n            {label && <label className={styles.label} htmlFor={id}>{label}</label>}\n            <input className={styles.input} id={id} name={name} value={value} onChange={handleChange} placeholder={placeholder} type={type} required={required} pattern={pattern} title={title} />\n        </div>\n    )\n };\n\nexport default TextField;\n\nTextField.defaultProps = {\n    required: false,\n    type: 'text',\n    handleChange: ()=>{},\n}\nTextField.propTypes = {\n    label: PropTypes.string,\n    name: PropTypes.string.isRequired,\n    value: PropTypes.string.isRequired,\n    handleChange: PropTypes.func.isRequired,\n    placeholder: PropTypes.string,\n    required: PropTypes.bool,\n    type: PropTypes.string,\n    pattern: PropTypes.string,\n    title: PropTypes.string,\n}","import { useSelector } from \"react-redux\";\nimport { auth } from \"redux/auth/auth-selectors\";\n\nfunction useAuthState() {\n    const authState = useSelector(auth);\n    return authState;\n}\n\nexport default useAuthState;","import { useState } from \"react\";\nimport PropTypes from 'prop-types';\n    \nconst useForm = ({onSubmit, initialState}) => {\n    const [state, setState] = useState({...initialState});\n\n    const handleChange = ({target}) => {\n        const { name, value, type, checked } = target;\n        const newValue = type === \"checkbox\" ? checked : value;\n        setState(prevState => ({\n            ...prevState,\n            [name]: newValue\n        }))\n    }\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        onSubmit({...state});\n        reset();\n    };\n    const reset = () => {\n    setState({\n        ...initialState\n      })\n  }\n\n    return {state, setState, handleChange, handleSubmit, reset};\n}\n\nexport default useForm;\n\n\nuseForm.defaultProps = {\n    onSubmit: () => { },\n    initialState: {},\n}\nuseForm.propTypes = {\n    onSubmit: PropTypes.func.isRequired,\n    initialState: PropTypes.object.isRequired,\n}"],"names":["fields","label","name","placeholder","required","type","initialState","email","password","onSubmit","useForm","state","handleChange","handleSubmit","TextField","value","Button","text","dispatch","useDispatch","loading","useAuthState","Loader","data","loginRequest","className","pattern","title","id","useMemo","nanoid","styles","htmlFor","onChange","defaultProps","useSelector","auth","useState","setState","reset","target","checked","newValue","prevState","e","preventDefault","propTypes","PropTypes"],"sourceRoot":""}