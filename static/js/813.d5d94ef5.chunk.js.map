{"version":3,"file":"static/js/813.d5d94ef5.chunk.js","mappings":"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","sources":["modules/Register/RegisterForm/fields.js","modules/Register/RegisterForm/initialState.js","modules/Register/RegisterForm/RegisterForm.jsx","modules/Register/Register.jsx","pages/RegisterPage/RegisterPage.jsx","webpack://goit-react-hw-08-phonebook/./src/shared/components/TextField/textField.module.css?9fa7","shared/components/TextField/TextField.jsx","shared/hooks/useAuthState.js","shared/hooks/useForm.js"],"sourcesContent":["export const fields = {\n    name: {\n        label: \"Name\",\n        name: \"name\",\n        placeholder: \"Type your full name\",\n        required: true,\n        type: \"text\",\n        pattern: \"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\",\n        title: \"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\",\n    },\n    email: {\n        label: \"Email\",\n        name: \"email\",\n        placeholder: \"Type your email\",\n        required: true,\n        type: \"email\",\n    },\n    password: {\n        label: 'Password',\n        name: 'password',\n        placeholder: \"Type your password\",\n        required: true,\n        type: \"password\",\n    }\n}","export const initialState = {\n    name: '',\n    email: '',\n    password: '',\n}","\nimport useForm from 'shared/hooks/useForm';\n\nimport TextFields from 'shared/components/TextField';\nimport Button from 'shared/components/Button';\n\nimport { fields } from \"./fields\";\nimport { initialState } from './initialState';\n\nfunction RegisterForm({ onSubmit }) {\n    const { state, handleChange, handleSubmit } = useForm({onSubmit, initialState});\n\n    const { name, email, password } = state;\n\n    return (\n        <form onSubmit={handleSubmit}>\n            <TextFields value={name} handleChange={handleChange} {...fields.name} />\n            <TextFields value={email} handleChange={handleChange} {...fields.email} />\n            <TextFields value={password} handleChange={handleChange} {...fields.password} />\n            <Button text='Register' type='submit'/>\n        </form>\n    )\n}\n\nexport default RegisterForm;","import { useDispatch } from 'react-redux';\n\nimport useAuthState from 'shared/hooks/useAuthState';\nimport { signupRequest } from '../../redux/auth/auth-operations';\n\nimport RegisterForm from './RegisterForm';\nimport Loader from 'shared/components/Loader';\n\nfunction Register() {\n  const dispatch = useDispatch();\n  const { loading} = useAuthState();\n\n  function onRegister(data) {\n    dispatch(signupRequest(data));\n  }\n  return (\n    <>\n      {loading && <Loader />}\n      <RegisterForm onSubmit={onRegister} />\n    </>\n  );\n}\n\nexport default Register;\n","import Register from \"modules/Register\";\n\nfunction RegisterPage() {\n    return (\n        <main>\n            <div className='container'>\n                <section className='section'>\n                    <h1 className='title'>Register Page</h1>\n                    <Register />\n                </section>\n            </div>\n        </main>\n    )\n };\nexport default RegisterPage;","// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"textField_wrapper__50VcK\",\"label\":\"textField_label__sEkJy\",\"input\":\"textField_input__0wJ6p\"};","import { useMemo } from \"react\";\nimport PropTypes from 'prop-types';\nimport { nanoid } from \"@reduxjs/toolkit\";\nimport styles from './textField.module.css';\n\n\nfunction TextField({label, name, value, handleChange, placeholder, required, type, pattern, title}) {\n\n    const id = useMemo(() => nanoid(), []);\n\n    return (\n        <div className={styles.wrapper}>\n            {label && <label className={styles.label} htmlFor={id}>{label}</label>}\n            <input className={styles.input} id={id} name={name} value={value} onChange={handleChange} placeholder={placeholder} type={type} required={required} pattern={pattern} title={title} />\n        </div>\n    )\n };\n\nexport default TextField;\n\nTextField.defaultProps = {\n    required: false,\n    type: 'text',\n    handleChange: ()=>{},\n}\nTextField.propTypes = {\n    label: PropTypes.string,\n    name: PropTypes.string.isRequired,\n    value: PropTypes.string.isRequired,\n    handleChange: PropTypes.func.isRequired,\n    placeholder: PropTypes.string,\n    required: PropTypes.bool,\n    type: PropTypes.string,\n    pattern: PropTypes.string,\n    title: PropTypes.string,\n}","import { useSelector } from \"react-redux\";\nimport { auth } from \"redux/auth/auth-selectors\";\n\nfunction useAuthState() {\n    const authState = useSelector(auth);\n    return authState;\n}\n\nexport default useAuthState;","import { useState } from \"react\";\nimport PropTypes from 'prop-types';\n    \nconst useForm = ({onSubmit, initialState}) => {\n    const [state, setState] = useState({...initialState});\n\n    const handleChange = ({target}) => {\n        const { name, value, type, checked } = target;\n        const newValue = type === \"checkbox\" ? checked : value;\n        setState(prevState => ({\n            ...prevState,\n            [name]: newValue\n        }))\n    }\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        onSubmit({...state});\n        reset();\n    };\n    const reset = () => {\n    setState({\n        ...initialState\n      })\n  }\n\n    return {state, setState, handleChange, handleSubmit, reset};\n}\n\nexport default useForm;\n\n\nuseForm.defaultProps = {\n    onSubmit: () => { },\n    initialState: {},\n}\nuseForm.propTypes = {\n    onSubmit: PropTypes.func.isRequired,\n    initialState: PropTypes.object.isRequired,\n}"],"names":["fields","label","name","placeholder","required","type","pattern","title","initialState","email","password","onSubmit","useForm","state","handleChange","handleSubmit","TextField","value","Button","text","dispatch","useDispatch","loading","useAuthState","Loader","data","signupRequest","className","id","useMemo","nanoid","styles","htmlFor","onChange","defaultProps","useSelector","auth","useState","setState","reset","target","checked","newValue","prevState","e","preventDefault","propTypes","PropTypes"],"sourceRoot":""}